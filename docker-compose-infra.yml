version: "3.4"

services:
  pratofeitodb:
    image: postgres
    container_name: pratofeitodb
    restart: always
    command:
      - "postgres"
      - "-c"
      - "max_prepared_transactions=64"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - "${POSTGRES_VOLUMES}:/var/lib/mysql"
    networks:
      - postgres-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_SENHA}
    ports:
      - "16543:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
      - postgres-network
    depends_on:
      - pratofeitodb

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "127.0.0.1:4510-4530:4510-4530"
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
      - "127.0.0.1:9999:8080"
    environment:      
      - AWS_ACCESS_KEY_ID=${LOCALSTACK_AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${LOCALSTACK_AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${LOCALSTACK_AWS_DEFAULT_REGION}
      - SERVICES=sns,sqs
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
    volumes:
      - "./InitialScripts/LocalStack/profile.sh:/docker-entrypoint-initaws.d/profile.sh"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${LOCALSTACK_VOLUMES}:/var/tmp/localstack"  
    networks:
      - localstack-network      

networks:
  postgres-network:
    driver: bridge
  localstack-network:
    driver: bridge
  pratofeito_localstack-network:
    external: true    
    
volumes:
  pgadmin_data: